<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">


    <!--引入jdbc配置文件-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
                <!--要是又多个配置文件,只需在这里继续添加即可-->
            </list>
        </property>
    </bean>

    <!--配置数据源-->
   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
       <!--不使用properties来配置-->
      <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
       <property name="url" value="jdbc:mysql://localhost:3306/ssm"/>
       <property name="username" value="sa"/>
       <property name="password" value="123"/>

       <property name="initialSize" value="0"/>
       <!-- 连接池最大使用连接数量 -->
       <property name="maxActive" value="20" />
       <!-- 连接池最大空闲 -->
       <property name="maxIdle" value="20" />
       <!-- 连接池最小空闲 -->
       <property name="minIdle" value="0" />
       <!-- 获取连接最大等待时间 -->
       <property name="maxWait" value="60000" />
       <!--
       <property name="poolPreparedStatements" value="true" />
       <property name="maxPoolPreparedStatementPerConnectionSize" value="33" />
       -->
       <property name="validationQuery" value="${validationQuery}" />
       <property name="testOnBorrow" value="false" />
       <property name="testOnReturn" value="false" />
       <property name="testWhileIdle" value="true" />
       <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
       <property name="timeBetweenEvictionRunsMillis" value="60000" />
       <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
       <property name="minEvictableIdleTimeMillis" value="25200000" />
       <!-- 打开removeAbandoned功能 -->
       <property name="removeAbandoned" value="true" />
       <!-- 1800秒，也就是30分钟 -->
       <property name="removeAbandonedTimeout" value="1800" />
       <!-- 关闭abanded连接时输出错误日志 -->
       <property name="logAbandoned" value="true" />
       <!-- 监控数据库 -->
       <!-- <property name="filters" value="stat" /> -->
       <property name="filters" value="mergeStat" />
   </bean>

   <!-- 自动扫描了所有的XXXXXXMapper.xml对应的mapper接口文件,这样就不用一个一个手动配置Mapper的映射了,只要Mapper接口类和Mapper映射文件对应起来就可以了.-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ql.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


    <!--配置mybatis的文件,mapperLocaltions配置**Mapper.xml文件位置,configLocation配置mybatis-config文件位置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:com/ql/mapper/*.xml"/>
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.ql.model"></property>-->
    </bean>

    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>me.gacl.service.*</value>
            </list>
        </property>
    </bean>


    <context:component-scan base-package="com.ql.service"/>

</beans>